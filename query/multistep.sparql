PREFIX owl: <http://www.w3.org/2002/07/owl#>
PREFIX rdfs: <http://www.w3.org/2000/01/rdf-schema#>
PREFIX rdf: <http://www.w3.org/1999/02/22-rdf-syntax-ns#>

# Delete any leftovers of previous schemata
DROP GRAPH <http://example.org/LOVInferred>;

# Find all predicates used in the current dataset and their equivalents and generalizations
INSERT { GRAPH <http://example.org/LOVInferred> {
  ?predicate a rdf:Property
}}
USING <http://example.org/contacts_b>
USING <http://example.org/contacts_a>
USING <http://schema.org/>
USING <http://xmlns.com/foaf/0.1/>
WHERE {
  { SELECT DISTINCT ?x {[] ?x []} }
  {
    ?x (rdfs:subPropertyOf|owl:equivalentProperty|^owl:equivalentProperty|owl:sameAs|^owl:sameAs)* ?predicate FILTER(!isBlank(?predicate))
  } UNION { 
    SERVICE <http://localhost:3030/terminology/sparql> {GRAPH ?g {
        ?x (rdfs:subPropertyOf|owl:equivalentProperty|^owl:equivalentProperty|owl:sameAs|^owl:sameAs)* ?predicate FILTER(!isBlank(?predicate))
      }}
  }
};

# Find all classes used in the current dataset or implied through entailment
INSERT { GRAPH <http://example.org/LOVInferred> {
  ?concept a rdfs:Class
}}
USING <http://example.org/contacts_b>
USING <http://example.org/contacts_a>
USING <http://schema.org/>
USING <http://xmlns.com/foaf/0.1/>
USING NAMED <http://example.org/LOVInferred>
WHERE {
  {
    SELECT DISTINCT ?y {
      { 
        SELECT DISTINCT ?y {[] a ?y FILTER(!isBlank(?y))} 
      } UNION { 
        GRAPH <http://example.org/LOVInferred> { ?predicate a rdf:Property }
        {
          ?predicate (rdfs:range|rdfs:domain) ?y FILTER(!isBlank(?y))
        } UNION { 
          SERVICE <http://localhost:3030/terminology/sparql> {GRAPH ?h {
              ?predicate (rdfs:range|rdfs:domain) ?y FILTER(!isBlank(?y))
            }}
        }
      }
    }
  }

  {
    ?y (rdfs:subClassOf|owl:sameAs|^owl:sameAs|owl:equivalentClass|^owl:equivalentClass)* ?concept FILTER(!isBlank(?concept))
  } UNION { SERVICE <http://localhost:3030/terminology/sparql> {GRAPH ?i {
    ?y (rdfs:subClassOf|owl:sameAs|^owl:sameAs|owl:equivalentClass|^owl:equivalentClass)* ?concept FILTER(!isBlank(?concept))
      }}
  }
};

# Find describing information of previously discovered classes and predicates
INSERT { GRAPH <http://example.org/LOVInferred> {
  ?s ?p ?o
}}
USING <http://example.org/LOVInferred>
WHERE {
  { ?s a rdf:Property } UNION { ?s a rdfs:Class }
  { ?s ?p ?o } UNION { SERVICE <http://localhost:3030/terminology/sparql> {GRAPH ?j { ?s ?p ?o }} }
};
